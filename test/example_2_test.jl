module Example2Tests

using Test
using JitterTime

@testset "Example 2" begin #Instead of an aperiodic sampler, the extra sampler will be executed every 0.5 timeunit
    A1 = [0 1; 1 0]
    B1 = [0; 1]
    C1 = [1 0; 0 1]
    D1 = [0; 0]
    Qc = [1 0 0; 0 .1 0; 0 0 .1]
    R1c = B1*B1'
    plant = ContinuousSystem(1,A1,B1,C1,D1,5,R1c,Qc)
    
    S1 = [1 0]
    R21 = 0.1
    sampler1 = DiscreteSystem(2,S1,1,R21)
    
    R22 = 0.01
    S2 = [0 1]
    sampler2 = DiscreteSystem(3,S2,1,R22)

    AO1 = [.5309 .079 0; -.8673 .8597 0; 0 0 0];
    BO1 = [.0059 .4750 0; .1392 1.0065 0; 1 0 0];
    CO1 = [.5309 .079 0; -.8673 .8597 0; 0 0 0];
    DO1 = [.0059 .4750 0; .1392 1.0065 0; 1 0 0];
    obs1 = DiscreteSystem(4,AO1,BO1,CO1,DO1,[5, 2, 3])

    AO2 = [ 1 -.3906 0; 0 .0163 0; 0 0 1];
    BO2 = [0 0 .3906; 0 0 .9837; 0 0 0];
    CO2 = [ 1 -.3906 0; 0 .0163 0; 0 0 1];
    DO2 = [0 0 .3906; 0 0 .9837; 0 0 0];
    obs2 = DiscreteSystem(4,AO2,BO2,CO2,DO2,[5, 2, 3])

    obs = VersionedSystem([obs1,obs2])

    L = [3.633 2.7434 0]
    feedback = DiscreteSystem(5,-L,4)

    N = JitterTimeSystem([plant, sampler1, sampler2, obs, feedback])
    calcDynamics!(N)

    dt = 0.05
    for t = 1:240
        for k = 1:10
            passTime!(N,dt/10)
        end
        if 0 == mod(t,10)
            execSys!(N,3)
            execSys!(N,4,2)
        end
        if 0 == mod(t,3)
            execSys!(N,2)
            execSys!(N,4,1)
            execSys!(N,5)
        end
    end
    @test isapprox(N.dJdt, 0.860680772466343)
    @test isapprox(N.J, 12.574852494566098)
    R = zeros(3,3)
    R[2,2] = 1
    @test all(isapprox.(N.Rc, R))
    A = zeros(3,3)
    A[1,2]=A[2,1]=A[2,3] = 1
    @test all(isapprox.(N.Ac, A))
    Q = zeros(3,3)
    Q[1,1] = 1
    Q[2,2] = Q[3,3] = 0.1
    @test all(isapprox.(N.Qc, Q))
    P = [ 0.334482211088805 0.013682570982143 0.334482211088805 0.013682570982143 0.346026331881820 -0.067470502293183 -0.736229907436902 0.346026331881820 -0.067470502293183 -0.736229907436902 -1.072015087735536; 0.013682570982143 0.736398452636592 0.013682570982143 0.736398452636592 0.089642717236325 0.618518501967293 0.144408255208566 0.089642717236325 0.618518501967293 0.144408255208566 -2.022515650016641; 0.334482211088805 0.013682570982143 0.434482211088805 0.013682570982143 0.393526331881820 0.033179497706817 -0.736229907436902 0.393526331881820 0.033179497706817 -0.736229907436902 -1.520705797735536; 0.013682570982143 0.736398452636592 0.013682570982143 0.746398452636592 0.092493535636325 0.623587697067293 0.144408255208566 0.092493535636325 0.623587697067293 0.144408255208566 -2.046779503101181; 0.346026331881821 0.089642717236325 0.393526331881821 0.092493535636325 0.404746382499118 0.031761867747475 -0.643351469563386 0.404746382499118 0.031761867747475 -0.643351469563386 -1.557579115597717; -0.067470502293183 0.618518501967293 0.033179497706817 0.623587697067293 0.031761867747475 0.697213051450218 0.545336264308738 0.031761867747475 0.697213051450218 0.545336264308738 -2.028125150875103; -0.736229907436903 0.144408255208566 -0.736229907436903 0.144408255208566 -0.643351469563386 0.545336264308737 4.529499627421395 -0.643351469563386 0.545336264308737 4.529499627421395 0.841220381419191; 0.346026331881821 0.089642717236325 0.393526331881821 0.092493535636325 0.404746382499118 0.031761867747475 -0.643351469563386 0.404746382499118 0.031761867747475 -0.643351469563386 -1.557579115597717; -0.067470502293183 0.618518501967294 0.033179497706817 0.623587697067293 0.031761867747475 0.697213051450218 0.545336264308738 0.031761867747475 0.697213051450218 0.545336264308738 -2.028125150875104; -0.736229907436903 0.144408255208566 -0.736229907436903 0.144408255208566 -0.643351469563386 0.545336264308737 4.529499627421395 -0.643351469563386 0.545336264308737 4.529499627421395 0.841220381419191; -1.072015087735536 -2.022515650016641 -1.520705797735536 -2.046779503101181 -1.557579115597717 -2.028125150875103 0.841220381419190 -1.557579115597717 -2.028125150875103 0.841220381419190 11.222643465877262]

    @test all(isapprox.(N.P, P))
    
    
end # testset

end # module
